{{with $namespace := env "NAMESPACE"}}
{{$permanent_environments := "dev,staging,alpha,perf,prod"}}
apiVersion: apps/v1 # Requires v1.9+ K8s node versions
kind: Deployment
metadata:
  name: opendj-deployment
  labels:
    app: opendj
spec:
  replicas: 1
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      service: opendj
      environment: dev
      project: sam-solo
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        service: opendj
        environment: dev
        project: sam-solo
    spec:
      serviceAccountName: opendj-sa
      initContainers:
        - name: opendj-config
          image: us.gcr.io/broad-dsp-gcr-public/sam-solo-opendj-config:greg-test-5
          env:
            - name: ENVIRONMENT
              value: dev
            - name: VAULT_TOKEN_FILE
              value: /etc/vault/token
          volumeMounts:
            - mountPath: /etc/vault
              name: token
            - mountPath: /working
              name: appdir
      containers:
        - name: opendj
          image: broadinstitute/openam:opendj_himem
          command: [ "/opt/opendj/entrypoint.sh" ]
          ports:
            - containerPort: 389
              name: ldap
            - containerPort: 636
              name: ldaps
          volumeMounts:
            - mountPath: /opt/opendj/entrypoint.sh
              name: appdir
              subPath: opendj/entrypoint.sh
            - mountPath: /opt/opendj/data
              name: opendj-data
            - mountPath: /var/secrets/opendj/server.p12
              name: appdir
              subPath: opendj/server
            - mountPath: /var/secrets/opendj/server.pin
              name: appdir
              subPath: opendj/keystore.pin
            - mountPath: /var/secrets/opendj/dirmanager.pw
              name: appdir
              subPath: opendj/dirmanager.pw
            - mountPath: /opt/opendj/bootstrap/setup.sh
              name: appdir
              subPath: opendj/setup.sh
            - mountPath: /opt/example-v1.json
              name: appdir
              subPath: opendj/example-v1.json
            - mountPath: /etc/opendj.env
              name: appdir
              subPath: opendj/opendj.env
            # zzz_ prefix is intentional to make file load last after all other .ldif files
            - mountPath: /opt/opendj/bootstrap/ldif/zzz_proxy_user.ldif
              name: appdir
              subPath: opendj/proxy_user.ldif
            - mountPath: /opt/opendj/readiness.sh
              name: appdir
              subPath: opendj/readiness.sh
            - mountPath: /opt/opendj/liveness.sh
              name: appdir
              subPath: opendj/liveness.sh
            - mountPath: /logs
              name: opendj-logs
          readinessProbe:
            exec:
              command: ["bash", "-c", "chmod 755 /opt/opendj/readiness.sh && /opt/opendj/readiness.sh"]
            initialDelaySeconds: 10
            periodSeconds: 10
            failureThreshold: 12
          # No 'livenessProbe' because at the moment, we are unsure of the adverse effects a restart may have.  If opendj
          # gets into a bad state and we need to restart it, it will need to be done by a human
        - name: companion
          image: ubuntu
          # To keep container running, see: https://stackoverflow.com/questions/31870222/how-can-i-keep-a-container-running-on-kubernetes
          command: ["sh", "-c", "trap : TERM INT; (while true; do sleep 1000; done) & wait"]
          volumeMounts:
            - mountPath: /init_data
              name: appdir
      volumes:
        #  vault secret
        - name: token
          secret:
            secretName: token
            defaultMode: 0444
        #  emptyDir used to access all configs
        - name: appdir
          emptyDir: {}
        - name: podinfo
          downwardAPI:
            items:
              - path: "labels"
                fieldRef:
                  fieldPath: metadata.labels
              - path: "annotations"
                fieldRef:
                  fieldPath: metadata.annotations
        - name: opendj-logs
          persistentVolumeClaim:
            claimName: opendj-log-volume
        - name: opendj-data
          persistentVolumeClaim:
            {{if $permanent_environments | contains $namespace }}claimName: persistent-opendj-data-volume-{{$namespace}}{{else}}claimName: opendj-data-volume{{end}}
{{end}}
